resource "argocd_application" "helm" {
  metadata {
    name      = "helm-app"
    namespace = "argocd"
    labels = {
      test = "true"
    }
  }

  spec {
    destination {
        server    = "https://kubernetes.default.svc"
        namespace = "istio-system"
    }

    project = "project-infra"

    }

    source {
        repo_url        = "https://istio-release.storage.googleapis.com/charts"
        chart           = "base"
        target_revision = "1.16.1"
    #   helm {
    #     release_name = "testing"
    #     parameter {
    #       name  = "image.tag"
    #       value = "1.2.3"
    #     }
    #     parameter {
    #       name  = "someotherparameter"
    #       value = "true"
    #     }
    #     value_files = ["values-test.yml"]
    #     values = yamlencode({
    #       someparameter = {
    #         enabled   = true
    #         someArray = ["foo", "bar"]
    #       }
    #     })
    #   }
    }
        syncPolicy {

            automated {
                prune = true # Specifies if resources should be pruned during auto-syncing ( false by default ).
                selfHeal = true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
                allowEmpty = false # Allows deleting all application resources during automatic syncing ( false by default ).
                syncOptions {     # Sync options which modifies sync behavior
                    Validate=false # disables resource validation (equivalent to 'kubectl apply --validate=false') ( true by default ).
                    CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
                    PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
                    PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
                    RespectIgnoreDifferences=true # Allow the mutating webhook to be altered by AKS without issues.
                # The retry feature is available since v1.7
                }
                retry {
                    limit = 5 # number of failed sync attempt retries; unlimited number of attempts if less than 0
                    # backoff {
                    #     # duration = 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                    #     factor =  2 # a factor to multiply the base duration after each failed retry
                    #     maxDuration = 3m # the maximum amount of time allowed for the backoff strategy
                    # }
                }
            } # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.

        }
  }
